spring:
  application:
    name: "vpn-control-panel-backend"
  datasource:
    url: jdbc:postgresql://minikube:30001/database
    username: user
    password: password
  jpa:
    hibernate:
      ddl-auto: validate
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect

firewall:
  client-rules-file: /home/haroun/nftables/per-client-rules.nft
  nft-config-file: /home/haroun/nftables/nftablse.conf

vpn:
  server: vpn.erisdev.io
  port: 1194
  ccd-directory: /home/haroun/openvpntest/ccd
  default-destination: 10.8.0.1
  guest:
    ip-range:
      start: 10.8.0.20
      end: 10.8.0.255
    subnet: 255.255.255.0
  admin:
    ip-range:
      start: 10.8.0.10
      end: 10.8.0.19
    subnet: 255.255.255.0
  agent:
    enabled: true
    status-path: /var/lib/openvpn/clients.json
    socket-path: /var/run/openvpn/agent.sock
    status-interval: 5
    status-mode: ssh # or 'file'
    ssh:
      user: vpnapp
      password: ${VPN_AGENT_SSH_PASSWORD}
      host: 10.8.0.1
      port: 22




certificate:
  operations:
    enabled: true
    enable-generation: true # enable generation server-side (insecure but easy)
    enable-revocation: true # enable revocation server-side (insecure but easy)
    enable-upload: true # enable upload of certificates (insecure but easy)
    enable-download: true
    use-ssh: true # use SSH for certificate operations if false it directly uses the socket from the agent
    socket:
      path: /home/haroun/workspace/security/vpn-certd/dist/run/vpn-certd.sock
      ssh:
        host: 10.8.0.1
        port: 22
        user: certificate-agent
        password: ${CERTIFICATE_AGENT_SSH_PASSWORD}



logging:
  level:
    org:
      springframework:
        security: DEBUG
        web:
          filterChainProxy: TRACE
